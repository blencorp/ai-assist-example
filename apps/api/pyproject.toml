[project]
name = "ai-assist-api"
version = "0.1.0"
description = "AI Assist FastAPI backend"
readme = "README.md"
requires-python = ">=3.13,<3.14"
dependencies = [
    "fastapi>=0.116.1",
    "uvicorn[standard]>=0.35.0",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.7.1",
    "httpx>=0.28.1",
    "openai-agents>=0.1.0",
    "python-dotenv>=1.0.0",
    "azure-identity>=1.19.0",
    "langsmith[openai-agents]>=0.3.15",
]

[project.optional-dependencies]
dev = [
    "basedpyright>=1.24.7",
    "ruff>=0.9.2",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.25.2",
    "pytest-cov>=6.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "basedpyright>=1.24.7",
    "ruff>=0.9.2",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.25.2",
    "pytest-cov>=6.0.0",
]

[tool.ruff]
line-length = 88
target-version = "py313"
fix = true

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "SIM",   # flake8-simplify
    "TCH",   # flake8-type-checking
    "RUF",   # Ruff-specific rules
    "ASYNC", # flake8-async
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.basedpyright]
typeCheckingMode = "strict"
pythonVersion = "3.13"
pythonPlatform = "Linux"
exclude = ["tests/**", ".venv/**", "venv/**", "**/node_modules/**"]
reportMissingImports = true
reportMissingTypeStubs = true
reportUnknownParameterType = true
reportUnknownArgumentType = true
reportUnknownVariableType = true
reportUnknownMemberType = true
reportCallInDefaultInitializer = true
reportUnnecessaryTypeIgnoreComment = true
